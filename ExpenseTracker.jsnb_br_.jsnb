{
  "metadata": {
    "name": "ExpenseTracker.jsnb<br>",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "// Inject HTML UI into the page\ndocument.body.innerHTML = `\n  <h2>ðŸ’° Expense Tracker</h2>\n  <input id=\"desc\" placeholder=\"Description\" />\n  <input id=\"amount\" placeholder=\"Amount\" type=\"number\" />\n  <select id=\"category\">\n    <option value=\"Food\">Food</option>\n    <option value=\"Transport\">Transport</option>\n    <option value=\"Shopping\">Shopping</option>\n    <option value=\"Bills\">Bills</option>\n    <option value=\"Other\">Other</option>\n  </select>\n  <button id=\"add-btn\">Add</button>\n  <button id=\"clear-btn\">Reset</button>\n  <div id=\"expense-list\"></div>\n  <div id=\"summary\"></div>\n`;\n\n// Load expenses from localStorage or empty\nlet expenses = JSON.parse(localStorage.getItem(\"expenses\") || \"[]\");\n\n// Update the expense list and summary display\nfunction updateUI() {\n  const expenseList = document.getElementById(\"expense-list\");\n  const summaryDiv = document.getElementById(\"summary\");\n  \n  if (expenses.length === 0) {\n    expenseList.innerHTML = \"<p>No expenses recorded.</p>\";\n    summaryDiv.innerHTML = \"\";\n    return;\n  }\n  \n  // Build expense list\n  let html = \"<h3>Expenses:</h3><ul>\";\n  expenses.forEach(e => {\n    html += `<li>${e.desc} - â‚¹${e.amount.toFixed(2)} (${e.cat})</li>`;\n  });\n  html += \"</ul>\";\n  expenseList.innerHTML = html;\n  \n  // Build summary by category\n  let totals = {};\n  expenses.forEach(e => {\n    totals[e.cat] = (totals[e.cat] || 0) + e.amount;\n  });\n  \n  let summaryHtml = \"<h3>Category Summary:</h3><ul>\";\n  for (const cat in totals) {\n    summaryHtml += `<li>${cat}: â‚¹${totals[cat].toFixed(2)}</li>`;\n  }\n  summaryHtml += \"</ul>\";\n  summaryDiv.innerHTML = summaryHtml;\n}\n\n// Add a new expense from inputs\nfunction addExpense() {\n  const desc = document.getElementById(\"desc\").value.trim();\n  const amountStr = document.getElementById(\"amount\").value.trim();\n  const amount = parseFloat(amountStr);\n  const cat = document.getElementById(\"category\").value;\n  \n  if (!desc) {\n    alert(\"Please enter a description.\");\n    return;\n  }\n  if (!amountStr || isNaN(amount) || amount <= 0) {\n    alert(\"Please enter a valid amount greater than 0.\");\n    return;\n  }\n  \n  expenses.push({ desc, amount, cat });\n  localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n  \n  // Clear inputs\n  document.getElementById(\"desc\").value = \"\";\n  document.getElementById(\"amount\").value = \"\";\n  \n  updateUI();\n}\n\n// Clear all expenses\nfunction clearExpenses() {\n  if (!confirm(\"Are you sure you want to reset all expenses?\")) return;\n  expenses = [];\n  localStorage.removeItem(\"expenses\");\n  updateUI();\n}\n\n// Set event listeners\ndocument.getElementById(\"add-btn\").onclick = addExpense;\ndocument.getElementById(\"clear-btn\").onclick = clearExpenses;\n\n// Initial UI render\nupdateUI();\n",
      "status": "[1]<br><span style=\"font-size:8px\">1ms<span></span></span>",
      "output": "\n<h2>ðŸ’° Expense Tracker</h2>\n<input id=\"desc\" placeholder=\"Description\">\n<input id=\"amount\" placeholder=\"Amount\" type=\"number\">\n<select id=\"category\">\n  <option value=\"Food\">Food</option>\n  <option value=\"Transport\">Transport</option>\n  <option value=\"Shopping\">Shopping</option>\n  <option value=\"Bills\">Bills</option>\n  <option value=\"Other\">Other</option>\n</select>\n<button id=\"add-btn\">Add</button>\n<button id=\"clear-btn\">Reset</button>\n<div id=\"expense-list\"></div>\n<canvas id=\"chart\" width=\"400\" height=\"300\"></canvas>\n\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n\n<script>\n(() => {\n  let expenses = JSON.parse(localStorage.getItem(\"expenses\") || \"[]\");\n\n  const descInput = document.getElementById(\"desc\");\n  const amountInput = document.getElementById(\"amount\");\n  const categorySelect = document.getElementById(\"category\");\n  const addBtn = document.getElementById(\"add-btn\");\n  const clearBtn = document.getElementById(\"clear-btn\");\n  const expenseList = document.getElementById(\"expense-list\");\n  const chartCanvas = document.getElementById(\"chart\");\n  let myChart;\n\n  function updateUI(clearOnly = false) {\n    let html = \"<h3>Expenses:</h3>\";\n    if (expenses.length === 0) {\n      html += \"<p>No data</p>\";\n    } else {\n      html += \"<ul>\";\n      let totals = {};\n      expenses.forEach(e => {\n        html += `<li>${e.desc} - â‚¹${e.amount} (${e.cat})</li>`;\n        totals[e.cat] = (totals[e.cat] || 0) + e.amount;\n      });\n      html += \"</ul>\";\n\n      if (!clearOnly) {\n        const labels = Object.keys(totals);\n        const data = Object.values(totals);\n        const ctx = chartCanvas.getContext(\"2d\");\n        if (myChart) myChart.destroy();\n        myChart = new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels,\n            datasets: [{\n              label: 'â‚¹ per Category',\n              data,\n              backgroundColor: 'teal'\n            }]\n          },\n          options: {\n            responsive: true,\n            scales: {\n              y: { beginAtZero: true }\n            }\n          }\n        });\n      }\n    }\n\n    expenseList.innerHTML = html;\n    if (clearOnly && myChart) {\n      myChart.destroy();\n      myChart = null;\n    }\n  }\n\n  function addExpense() {\n    const desc = descInput.value.trim();\n    const amount = parseFloat(amountInput.value);\n    const cat = categorySelect.value;\n    if (!desc || !amount || isNaN(amount)) {\n      alert(\"Please enter a valid description and amount.\");\n      return;\n    }\n    expenses.push({ desc, amount, cat });\n    localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n    updateUI();\n    descInput.value = \"\";\n    amountInput.value = \"\";\n  }\n\n  function clearExpenses() {\n    expenses = [];\n    localStorage.removeItem(\"expenses\");\n    updateUI(true);\n  }\n\n  addBtn.onclick = addExpense;\n  clearBtn.onclick = clearExpenses;\n\n  updateUI();\n})();\n</script>\n <br>",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/scribbler",
  "run_on_load": false
}